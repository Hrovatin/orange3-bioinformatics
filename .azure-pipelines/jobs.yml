parameters:
  name: ''
  vmImage: ''

jobs:

- job: ${{ parameters.name }}_released
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    # use conda python on linux. Temporary fix. https://github.com/microsoft/azure-pipelines-image-generation/issues/1083
    - ${{ if in(parameters.name, 'Linux') }}:
      - task: CondaEnvironment@1
        inputs:
          packageSpecs: 'python=3.7'
          installOptions: '-c conda-forge'
          updateConda: false
        displayName: Install python and activate conda environment

    - ${{ if in(parameters.name, 'macOS', 'Windows') }}:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'

    - template: install_addon.yml
      parameters:
          orange_version: 'released'

    - template: test.yml

# this job will only run if build with stable (released) Orange fails.
- job: ${{ parameters.name }}_dev
  dependsOn: ${{ parameters.name }}_released
  condition: failed()

  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    # use conda python on linux. Temporary fix. https://github.com/microsoft/azure-pipelines-image-generation/issues/1083
    - ${{ if in(parameters.name, 'Linux') }}:
      - task: CondaEnvironment@1
        inputs:
          packageSpecs: 'python=3.7'
          installOptions: '-c conda-forge'
          updateConda: false
        displayName: Install python and activate conda environment

    - ${{ if in(parameters.name, 'macOS', 'Windows') }}:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'

    - template: install_addon.yml
      parameters:
        orange_version: 'dev'

    - template: test.yml
